import { useState } from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";

const questions = [
  {
    value: "Proudly Inclusive",
    question: "How can you show inclusivity in the workplace?",
    options: [
      "Greet everyone warmly and respect differences",
      "Only focus on clients, not teammates",
      "Assume everyone has the same needs",
    ],
    correct: 0,
  },
  {
    value: "Genuinely Warm",
    question: "What does being 'Genuinely Warm' mean at Portico?",
    options: [
      "Creating a happy team and spreading positivity",
      "Ignoring workplace morale",
      "Only smiling at clients but not teammates",
    ],
    correct: 0,
  },
  {
    value: "Inspirationally Positive",
    question: "How can you lift the mood of others?",
    options: [
      "Smile, encourage, and support them",
      "Ignore their emotions",
      "Let someone else handle it",
    ],
    correct: 0,
  },
  {
    value: "Always Transformative",
    question: "What is a small change that can create a big difference?",
    options: [
      "Improving team communication",
      "Keeping things exactly the same",
      "Avoiding feedback",
    ],
    correct: 0,
  },
];

export default function PorticoValuesGame() {
  const [currentQuestion, setCurrentQuestion] = useState(0);
  const [score, setScore] = useState(0);
  const [showResult, setShowResult] = useState(false);

  const handleAnswer = (index) => {
    if (index === questions[currentQuestion].correct) {
      setScore(score + 1);
    }
    if (currentQuestion + 1 < questions.length) {
      setCurrentQuestion(currentQuestion + 1);
    } else {
      setShowResult(true);
    }
  };

  return (
    <div className="flex flex-col items-center p-6">
      {!showResult ? (
        <Card className="p-6 w-full max-w-md">
          <CardContent>
            <h2 className="text-xl font-bold">{questions[currentQuestion].value}</h2>
            <p className="my-4">{questions[currentQuestion].question}</p>
            {questions[currentQuestion].options.map((option, index) => (
              <Button key={index} className="my-2 w-full" onClick={() => handleAnswer(index)}>
                {option}
              </Button>
            ))}
          </CardContent>
        </Card>
      ) : (
        <Card className="p-6 w-full max-w-md text-center">
          <CardContent>
            <h2 className="text-2xl font-bold">Game Over!</h2>
            <p className="mt-4">Your Score: {score} / {questions.length}</p>
            <Button className="mt-4" onClick={() => { setCurrentQuestion(0); setScore(0); setShowResult(false); }}>
              Play Again
            </Button>
          </CardContent>
        </Card>
      )}
    </div>
  );
}
